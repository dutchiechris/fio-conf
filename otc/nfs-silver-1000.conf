# This workload definition matches a typical 'Silver' service level mix:
#
# (pattern) (read)   (write)
#    RND     37.5%    12.5%
#    SEQ     37.5%    12.5%
#
# To enforce this mix rate limits are used.  This configuration will attempt to
# create 1000 IOPs of the above mix.  See notes below how to adjust if you need
# more IOPs.
#
# Instructions for use:
# 1) Modify filename parameter to your test files.  Separate multiple files with a ":"
# 2) Start the workload
#    - For the full workload use:
#      fio nfs-silver-1000.conf
#    - To only run sequential component specify the sections like:
#      fio --section rnd-read --section rnd-write nfs-silver-1000.conf
# 3) To simulate other IOPs levels modify in the Random and Sequential profiles
#    below.  Be sure to read the comments because there are some nuances!

[global]
ioengine=libaio
direct=1
filesize=100g
filename=/mnt/perftest/vol_data3/file:/mnt/perftest/vol_data4/file
thread
unified_rw_reporting=1
group_reporting=1
randrepeat=0
norandommap=1
buffer_compress_percentage=0
dedupe_percentage=0
scramble_buffers=1
refill_buffers
time_based
runtime=86400

## Random #####################################################################
# For random best to have multiple jobs (threads), each using the default
# iodepth=1.  The rate_iops is per job, so (numjobs * rate_iops) = IOPs of
# the profile.
###############################################################################

[rnd-read]
bs=8k
rw=randread
numjobs=5
rate_iops=75

[rnd-write]
bs=8k
rw=randwrite
numjobs=5
rate_iops=25

## Sequential #################################################################
# For sequential best to have fewer jobs (threads), but with a higher iodepth
# to ensure pattern appears sequential to the storage system. You may have to
# adjust the iodepth up or down to meet IOPs goal.  If too low you won't create
# enough IOPs (re: little's law) and if too high (i.e. more than the storage
# can service) queue time dominates reported latency.
# The rate_iops is per job, rate_iops = IOPs of the profile.
###############################################################################

[seq-read]
bs=32k
rw=read
numjobs=1
iodepth=16
rate_iops=375

[seq-write]
bs=32k
rw=write
numjobs=1
iodepth=16
rate_iops=125
